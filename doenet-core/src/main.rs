use doenet_core::{DoenetCore,create_doenet_core,update_renderers};


fn main() {
  println!("Hello, world!");

  let program = r#"["\n\n    ",{"componentType":"number","props":{"name":"n"},"children":["1"],"range":{"openBegin":7,"openEnd":13,"closeBegin":24,"closeEnd":33}},"\n\n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":40,"openEnd":41,"closeBegin":396,"closeEnd":400}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":411,"openEnd":412,"closeBegin":767,"closeEnd":771}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":782,"openEnd":783,"closeBegin":1138,"closeEnd":1142}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":1153,"openEnd":1154,"closeBegin":1509,"closeEnd":1513}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":1524,"openEnd":1525,"closeBegin":1880,"closeEnd":1884}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":1895,"openEnd":1896,"closeBegin":2251,"closeEnd":2255}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":2266,"openEnd":2267,"closeBegin":2622,"closeEnd":2626}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":2637,"openEnd":2638,"closeBegin":2993,"closeEnd":2997}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":3008,"openEnd":3009,"closeBegin":3364,"closeEnd":3368}},"\n    \n    ",{"componentType":"p","props":{},"children":["\n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n \n    $n $n $n $n $n $n $n $n $n $n\n    "],"range":{"openBegin":3379,"openEnd":3380,"closeBegin":3735,"closeEnd":3739}},"\n    "]
"#;

for x in 1..100 {
  let mut result = doenet_core::create_doenet_core(&program, None);

  if let Ok((mut core, _, _)) = result {
    println!("nodes: {:?}", core.component_nodes.len());
    let render_tree_string = doenet_core::update_renderers(&mut core);

  }
}




}